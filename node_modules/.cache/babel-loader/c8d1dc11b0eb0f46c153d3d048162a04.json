{"ast":null,"code":"var _jsxFileName = \"/Users/shaneazania/Documents/GitHub/React-Projects/crown-clothing/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState /*, useEffect*/ } from \"react\";\nimport \"../utils/firebase/firebase.utils\";\n\n// the actual value you want to access\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  set_isCartOpen: () => null,\n  cartItems: [],\n  addItemToCart: () => {}\n});\n\n// provider is the actual component that gets wrapped around other components to give them acces to the context\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, set_isCartOpen] = useState(true);\n  const [cartItems, set_cartItems] = useState([{\n    id: 1,\n    name: \"Brown Brim\",\n    imageUrl: \"https://i.ibb.co/ZYW3VTp/brown-brim.png\",\n    price: 25,\n    quantity: 10\n  }]);\n  // cart item structure\n  /*\n  \t{\n  \t\tid: 1,\n  \t\tname: \"Brown Brim\",\n  \t\timageUrl: \"https://i.ibb.co/ZYW3VTp/brown-brim.png\",\n  \t\tprice: 25,\n  \t\tquantity: 10,\n  \t}\n  */\n\n  const addItemToCart = itemToAdd => {\n    // If item is already in 'cartItems', increase the quantity value, else add 'itemToAdd'.\n\n    // check if itemToAdd has a valid id in the cartItems[] already\n    var updatedCartItemsArray = [];\n    const itemToAddPresent = cartItems.find(item => item.id === itemToAdd.id);\n\n    // if item is already present, increase it's quantity by 1\n    if (itemToAddPresent) {\n      updatedCartItemsArray = cartItems.map(item => item.id === itemToAdd.id ?\n      //if itemToAdd matches current item in cart, increase the existing item quantity by 1\n      {\n        ...itemToAdd,\n        quantity: itemToAdd.quantity + 1\n      } :\n      //if current item does not match, just add current item to the new cart array\n      item);\n    } // if item is NOT already present, add quantity value to item, then add item to updatedCartItemsArray\n    else {\n      updatedCartItemsArray = [...cartItems, {\n        ...itemToAdd,\n        quantity: 1\n      }];\n    }\n    set_cartItems(updatedCartItemsArray);\n  };\n  const value = {\n    isCartOpen,\n    set_isCartOpen,\n    cartItems,\n    addItemToCart\n  };\n\n  // useEffect(() => {\n  // \t// const unsubscribe = onAuthStateChangedListener(async (products) => {\n  // \t// });\n  // \t// return unsubscribe;\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"qCBOC8OQfU4pOKZOv6SKviJrBoE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","CartContext","isCartOpen","set_isCartOpen","cartItems","addItemToCart","CartProvider","children","set_cartItems","id","name","imageUrl","price","quantity","itemToAdd","updatedCartItemsArray","itemToAddPresent","find","item","map","value"],"sources":["/Users/shaneazania/Documents/GitHub/React-Projects/crown-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState /*, useEffect*/ } from \"react\";\nimport {} from \"../utils/firebase/firebase.utils\";\n\n// the actual value you want to access\nexport const CartContext = createContext({\n\tisCartOpen: false,\n\tset_isCartOpen: () => null,\n\tcartItems: [],\n\taddItemToCart: () => {},\n});\n\n// provider is the actual component that gets wrapped around other components to give them acces to the context\nexport const CartProvider = ({ children }) => {\n\tconst [isCartOpen, set_isCartOpen] = useState(true);\n\tconst [cartItems, set_cartItems] = useState([\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: \"Brown Brim\",\n\t\t\timageUrl: \"https://i.ibb.co/ZYW3VTp/brown-brim.png\",\n\t\t\tprice: 25,\n\t\t\tquantity: 10,\n\t\t},\n\t]);\n\t// cart item structure\n\t/*\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: \"Brown Brim\",\n\t\t\timageUrl: \"https://i.ibb.co/ZYW3VTp/brown-brim.png\",\n\t\t\tprice: 25,\n\t\t\tquantity: 10,\n\t\t}\n\t*/\n\n\tconst addItemToCart = (itemToAdd) => {\n\t\t// If item is already in 'cartItems', increase the quantity value, else add 'itemToAdd'.\n\n\t\t// check if itemToAdd has a valid id in the cartItems[] already\n\t\tvar updatedCartItemsArray = [];\n\t\tconst itemToAddPresent = cartItems.find((item) => item.id === itemToAdd.id);\n\n\t\t// if item is already present, increase it's quantity by 1\n\t\tif (itemToAddPresent) {\n\t\t\tupdatedCartItemsArray = cartItems.map((item) =>\n\t\t\t\titem.id === itemToAdd.id\n\t\t\t\t\t? //if itemToAdd matches current item in cart, increase the existing item quantity by 1\n\t\t\t\t\t  { ...itemToAdd, quantity: itemToAdd.quantity + 1 }\n\t\t\t\t\t: //if current item does not match, just add current item to the new cart array\n\t\t\t\t\t  item\n\t\t\t);\n\t\t} // if item is NOT already present, add quantity value to item, then add item to updatedCartItemsArray\n\t\telse {\n\t\t\tupdatedCartItemsArray = [...cartItems, { ...itemToAdd, quantity: 1 }];\n\t\t}\n\n\t\tset_cartItems(updatedCartItemsArray);\n\t};\n\n\tconst value = { isCartOpen, set_isCartOpen, cartItems, addItemToCart };\n\n\t// useEffect(() => {\n\t// \t// const unsubscribe = onAuthStateChangedListener(async (products) => {\n\t// \t// });\n\t// \t// return unsubscribe;\n\t// }, []);\n\n\treturn <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,CAAC,uBAAuB,OAAO;AAC/D,OAAe,kCAAkC;;AAEjD;AAAA;AACA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC;EACxCG,UAAU,EAAE,KAAK;EACjBC,cAAc,EAAE,MAAM,IAAI;EAC1BC,SAAS,EAAE,EAAE;EACbC,aAAa,EAAE,MAAM,CAAC;AACvB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACxC,MAAM,CAACL,UAAU,EAAEC,cAAc,CAAC,GAAGH,QAAQ,CAAC,IAAI,CAAC;EACnD,MAAM,CAACI,SAAS,EAAEI,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAC3C;IACCS,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAE,yCAAyC;IACnDC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACX,CAAC,CACD,CAAC;EACF;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC,MAAMR,aAAa,GAAIS,SAAS,IAAK;IACpC;;IAEA;IACA,IAAIC,qBAAqB,GAAG,EAAE;IAC9B,MAAMC,gBAAgB,GAAGZ,SAAS,CAACa,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAKK,SAAS,CAACL,EAAE,CAAC;;IAE3E;IACA,IAAIO,gBAAgB,EAAE;MACrBD,qBAAqB,GAAGX,SAAS,CAACe,GAAG,CAAED,IAAI,IAC1CA,IAAI,CAACT,EAAE,KAAKK,SAAS,CAACL,EAAE;MACrB;MACA;QAAE,GAAGK,SAAS;QAAED,QAAQ,EAAEC,SAAS,CAACD,QAAQ,GAAG;MAAE,CAAC;MAClD;MACAK,IAAI,CACP;IACF,CAAC,CAAC;IAAA,KACG;MACJH,qBAAqB,GAAG,CAAC,GAAGX,SAAS,EAAE;QAAE,GAAGU,SAAS;QAAED,QAAQ,EAAE;MAAE,CAAC,CAAC;IACtE;IAEAL,aAAa,CAACO,qBAAqB,CAAC;EACrC,CAAC;EAED,MAAMK,KAAK,GAAG;IAAElB,UAAU;IAAEC,cAAc;IAAEC,SAAS;IAAEC;EAAc,CAAC;;EAEtE;EACA;EACA;EACA;EACA;;EAEA,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEe,KAAM;IAAA,UAAEb;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAC7E,CAAC;AAAC,GAvDWD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}