{"ast":null,"code":"var _jsxFileName = \"/Users/shaneazania/Documents/GitHub/seviin_threads/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport \"../utils/firebase/firebase.utils\";\n\n// the actual value you want to access\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  set_isCartOpen: () => null,\n  cartItems: null,\n  addItemToCart: () => null,\n  subtractItemFromCart: () => null,\n  deleteFromCart: () => null,\n  cartCount: null,\n  cartTotal: null\n});\n\n// Reducer and action types and iniitial state\nexport const CART_ACTION_TYPES = {\n  SET_IS_CART_OPEN: \"SET_IS_CART_OPEN\",\n  SET_CART_ITEMS: \"SET_CART_ITEMS\",\n  SET_CART_COUNT: \"SET_CART_COUNT\",\n  SET_CART_TOTAL: \"SET_CART_TOTAL\"\n};\nconst cartReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case CART_ACTION_TYPES.SET_IS_CART_OPEN:\n      break;\n    default:\n      break;\n  }\n};\nconst INITIAL_STATE = {\n  categories: [{\n    title: \"\",\n    items: [{\n      id: 0,\n      name: \"\",\n      imageUrl: \"\",\n      price: 0\n    }]\n  }]\n};\n\n// provider is the actual component that gets wrapped around other components to give them acces to the context\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, set_isCartOpen] = useState(false);\n  const [cartItems, set_cartItems] = useState([]);\n  const [cartCount, set_cartCount] = useState(0);\n  const [cartTotal, set_cartTotal] = useState(0);\n  useEffect(() => {\n    var countAccumulator = 0,\n      totalAccumulator = 0;\n    cartItems.map(_ref2 => {\n      let {\n        quantity,\n        price\n      } = _ref2;\n      countAccumulator += quantity;\n      totalAccumulator += price * quantity;\n      return 0;\n    });\n    set_cartCount(countAccumulator);\n    set_cartTotal(totalAccumulator);\n  }, [cartItems]);\n  const addItemToCart = itemToAdd => {\n    // If item is already in 'cartItems', increase the quantity value, else add 'itemToAdd'.\n    var updatedCartItemsArray = [];\n    // check if itemToAdd has a valid id in the cartItems[] already\n    const itemToAddPresent = cartItems.find(item => item.id === itemToAdd.id);\n\n    // if item is already present, increase it's quantity by 1\n    if (itemToAddPresent) {\n      updatedCartItemsArray = cartItems.map(item => item.id === itemToAdd.id ?\n      //if itemToAdd matches current item in cart, increase the existing item quantity by 1\n      {\n        ...item,\n        quantity: item.quantity + 1\n      } :\n      //if current item does not match, just add current item to the new cart array\n      item);\n    } // if item is NOT already present, add quantity value to item, then add item to updatedCartItemsArray\n    else {\n      updatedCartItemsArray = [...cartItems, {\n        ...itemToAdd,\n        quantity: 1\n      }];\n    }\n    set_cartItems(updatedCartItemsArray);\n  };\n  const subtractItemFromCart = itemToSubtract => {\n    var updatedCartItemsArray = [];\n\n    // check if item is in cartItems\n    const itemToSubtractPresent = cartItems.find(item => item.id === itemToSubtract.id);\n\n    // if item present, decrease quantity, else don't do anything\n    if (itemToSubtractPresent) {\n      updatedCartItemsArray = cartItems.map(item => {\n        if (item.id === itemToSubtractPresent.id) {\n          // check quantity\n          return {\n            ...item,\n            quantity: item.quantity - 1\n          };\n        } else {\n          return item;\n        }\n      });\n      // check if quantity reaches 0, don't add to updated cart array)\n      updatedCartItemsArray = updatedCartItemsArray.filter(item => item.quantity > 0);\n      set_cartItems(updatedCartItemsArray);\n    }\n  };\n  const deleteFromCart = itemToDelete => {\n    const updatedCartItemsArray = cartItems.filter(item => item.id !== itemToDelete.id);\n    set_cartItems(updatedCartItemsArray);\n  };\n  const value = {\n    isCartOpen,\n    set_isCartOpen,\n    cartItems,\n    addItemToCart,\n    subtractItemFromCart,\n    deleteFromCart,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"aH4raSrpoB4OheI+0/pxzGFHXng=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","CartContext","isCartOpen","set_isCartOpen","cartItems","addItemToCart","subtractItemFromCart","deleteFromCart","cartCount","cartTotal","CART_ACTION_TYPES","SET_IS_CART_OPEN","SET_CART_ITEMS","SET_CART_COUNT","SET_CART_TOTAL","cartReducer","state","action","type","payload","INITIAL_STATE","categories","title","items","id","name","imageUrl","price","CartProvider","children","set_cartItems","set_cartCount","set_cartTotal","countAccumulator","totalAccumulator","map","quantity","itemToAdd","updatedCartItemsArray","itemToAddPresent","find","item","itemToSubtract","itemToSubtractPresent","filter","itemToDelete","value"],"sources":["/Users/shaneazania/Documents/GitHub/seviin_threads/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport {} from \"../utils/firebase/firebase.utils\";\n\n// the actual value you want to access\nexport const CartContext = createContext({\n\tisCartOpen: false,\n\tset_isCartOpen: () => null,\n\tcartItems: null,\n\taddItemToCart: () => null,\n\tsubtractItemFromCart: () => null,\n\tdeleteFromCart: () => null,\n\tcartCount: null,\n\tcartTotal: null,\n});\n\n// Reducer and action types and iniitial state\nexport const CART_ACTION_TYPES = {\n\tSET_IS_CART_OPEN: \"SET_IS_CART_OPEN\",\n\tSET_CART_ITEMS: \"SET_CART_ITEMS\",\n\tSET_CART_COUNT: \"SET_CART_COUNT\",\n\tSET_CART_TOTAL: \"SET_CART_TOTAL\",\n};\nconst cartReducer = (state, action) => {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase CART_ACTION_TYPES.SET_IS_CART_OPEN:\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\nconst INITIAL_STATE = {\n\tcategories: [\n\t\t{\n\t\t\ttitle: \"\",\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tid: 0,\n\t\t\t\t\tname: \"\",\n\t\t\t\t\timageUrl: \"\",\n\t\t\t\t\tprice: 0,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t],\n};\n\n// provider is the actual component that gets wrapped around other components to give them acces to the context\nexport const CartProvider = ({ children }) => {\n\tconst [isCartOpen, set_isCartOpen] = useState(false);\n\tconst [cartItems, set_cartItems] = useState([]);\n\tconst [cartCount, set_cartCount] = useState(0);\n\tconst [cartTotal, set_cartTotal] = useState(0);\n\n\tuseEffect(() => {\n\t\tvar countAccumulator = 0,\n\t\t\ttotalAccumulator = 0;\n\t\tcartItems.map(({ quantity, price }) => {\n\t\t\tcountAccumulator += quantity;\n\t\t\ttotalAccumulator += price * quantity;\n\t\t\treturn 0;\n\t\t});\n\n\t\tset_cartCount(countAccumulator);\n\t\tset_cartTotal(totalAccumulator);\n\t}, [cartItems]);\n\n\tconst addItemToCart = (itemToAdd) => {\n\t\t// If item is already in 'cartItems', increase the quantity value, else add 'itemToAdd'.\n\t\tvar updatedCartItemsArray = [];\n\t\t// check if itemToAdd has a valid id in the cartItems[] already\n\t\tconst itemToAddPresent = cartItems.find((item) => item.id === itemToAdd.id);\n\n\t\t// if item is already present, increase it's quantity by 1\n\t\tif (itemToAddPresent) {\n\t\t\tupdatedCartItemsArray = cartItems.map((item) =>\n\t\t\t\titem.id === itemToAdd.id\n\t\t\t\t\t? //if itemToAdd matches current item in cart, increase the existing item quantity by 1\n\t\t\t\t\t  { ...item, quantity: item.quantity + 1 }\n\t\t\t\t\t: //if current item does not match, just add current item to the new cart array\n\t\t\t\t\t  item\n\t\t\t);\n\t\t} // if item is NOT already present, add quantity value to item, then add item to updatedCartItemsArray\n\t\telse {\n\t\t\tupdatedCartItemsArray = [...cartItems, { ...itemToAdd, quantity: 1 }];\n\t\t}\n\n\t\tset_cartItems(updatedCartItemsArray);\n\t};\n\n\tconst subtractItemFromCart = (itemToSubtract) => {\n\t\tvar updatedCartItemsArray = [];\n\n\t\t// check if item is in cartItems\n\t\tconst itemToSubtractPresent = cartItems.find((item) => item.id === itemToSubtract.id);\n\n\t\t// if item present, decrease quantity, else don't do anything\n\t\tif (itemToSubtractPresent) {\n\t\t\tupdatedCartItemsArray = cartItems.map((item) => {\n\t\t\t\tif (item.id === itemToSubtractPresent.id) {\n\t\t\t\t\t// check quantity\n\t\t\t\t\treturn { ...item, quantity: item.quantity - 1 };\n\t\t\t\t} else {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// check if quantity reaches 0, don't add to updated cart array)\n\t\t\tupdatedCartItemsArray = updatedCartItemsArray.filter((item) => item.quantity > 0);\n\n\t\t\tset_cartItems(updatedCartItemsArray);\n\t\t}\n\t};\n\n\tconst deleteFromCart = (itemToDelete) => {\n\t\tconst updatedCartItemsArray = cartItems.filter((item) => item.id !== itemToDelete.id);\n\t\tset_cartItems(updatedCartItemsArray);\n\t};\n\n\tconst value = {\n\t\tisCartOpen,\n\t\tset_isCartOpen,\n\t\tcartItems,\n\t\taddItemToCart,\n\t\tsubtractItemFromCart,\n\t\tdeleteFromCart,\n\t\tcartCount,\n\t\tcartTotal,\n\t};\n\n\treturn <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}