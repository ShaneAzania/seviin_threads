{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCSsn358KsZjPqT6A0WCf4U-AkDy4v4q4c\",\n  authDomain: \"crown-clothing-db-4898f.firebaseapp.com\",\n  projectId: \"crown-clothing-db-4898f\",\n  storageBucket: \"crown-clothing-db-4898f.appspot.com\",\n  messagingSenderId: \"453083291674\",\n  appId: \"1:453083291674:web:513447b479833089a071a3\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n// PROVIDER(S)\n// create Google Auth Provider for Google account sign-ins\nconst provider_Google = new GoogleAuthProvider();\nprovider_Google.setCustomParameters({\n  prompt: \"select_account\"\n});\n\n// Authentication\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider_Google);\n\n// create Databas object\nexport const db = getFirestore();\nexport const createUserDocRefFromAuth = async userAuth => {\n  console.log(\"userAuth:\", userAuth);\n  const userDocRef = doc(db, \"users\", userAuth.uid); // (database, 'collection string', aUniqueID)\n  console.log(\"userDocRef:\", userDocRef);\n\n  //getDoc(userDocRef) checks the firebase database for this userDocRef\n  const userSnapShot = await getDoc(userDocRef);\n  console.log(\"userSnapShot:\", userSnapShot);\n  console.log(\"userSnapShot exists:\", userSnapShot.exists());\n\n  // if user does not already exist then create the user document\n  if (!userSnapShot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    const updatedAt = new Date();\n\n    //create user using setDoc\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        updatedAt,\n        createdAt\n      });\n    } catch (error) {\n      console.log(\"Error creating the user:\", error.message);\n    }\n  }\n  return userDocRef;\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider_Google","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocRefFromAuth","userAuth","console","log","userDocRef","uid","userSnapShot","exists","displayName","email","createdAt","Date","updatedAt","error","message"],"sources":["/Users/shaneazania/Documents/GitHub/React-Projects/crown-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyCSsn358KsZjPqT6A0WCf4U-AkDy4v4q4c\",\n\tauthDomain: \"crown-clothing-db-4898f.firebaseapp.com\",\n\tprojectId: \"crown-clothing-db-4898f\",\n\tstorageBucket: \"crown-clothing-db-4898f.appspot.com\",\n\tmessagingSenderId: \"453083291674\",\n\tappId: \"1:453083291674:web:513447b479833089a071a3\",\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n// PROVIDER(S)\n// create Google Auth Provider for Google account sign-ins\nconst provider_Google = new GoogleAuthProvider();\nprovider_Google.setCustomParameters({\n\tprompt: \"select_account\",\n});\n\n// Authentication\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider_Google);\n\n// create Databas object\nexport const db = getFirestore();\n\nexport const createUserDocRefFromAuth = async (userAuth) => {\n\tconsole.log(\"userAuth:\", userAuth);\n\n\tconst userDocRef = doc(db, \"users\", userAuth.uid); // (database, 'collection string', aUniqueID)\n\tconsole.log(\"userDocRef:\", userDocRef);\n\n\t//getDoc(userDocRef) checks the firebase database for this userDocRef\n\tconst userSnapShot = await getDoc(userDocRef);\n\tconsole.log(\"userSnapShot:\", userSnapShot);\n\tconsole.log(\"userSnapShot exists:\", userSnapShot.exists());\n\n\t// if user does not already exist then create the user document\n\tif (!userSnapShot.exists()) {\n\t\tconst { displayName, email } = userAuth;\n\t\tconst createdAt = new Date();\n\t\tconst updatedAt = new Date();\n\n\t\t//create user using setDoc\n\t\ttry {\n\t\t\tawait setDoc(userDocRef, { displayName, email, updatedAt, createdAt });\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error creating the user:\", error.message);\n\t\t}\n\t}\n\n\treturn userDocRef;\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAChG,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AACtE;AACA;;AAEA;AACA,MAAMC,cAAc,GAAG;EACtBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,yCAAyC;EACrDC,SAAS,EAAE,yBAAyB;EACpCC,aAAa,EAAE,qCAAqC;EACpDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACR,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAc,CAAC;;AAEjD;AACA;AACA,MAAMQ,eAAe,GAAG,IAAIb,kBAAkB,EAAE;AAChDa,eAAe,CAACC,mBAAmB,CAAC;EACnCC,MAAM,EAAE;AACT,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,IAAI,GAAGnB,OAAO,EAAE;AAC7B,OAAO,MAAMoB,qBAAqB,GAAG,MAAMlB,eAAe,CAACiB,IAAI,EAAEH,eAAe,CAAC;;AAEjF;AACA,OAAO,MAAMK,EAAE,GAAGjB,YAAY,EAAE;AAEhC,OAAO,MAAMkB,wBAAwB,GAAG,MAAOC,QAAQ,IAAK;EAC3DC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAAC;EAElC,MAAMG,UAAU,GAAGrB,GAAG,CAACgB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACI,GAAG,CAAC,CAAC,CAAC;EACnDH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,UAAU,CAAC;;EAEtC;EACA,MAAME,YAAY,GAAG,MAAMtB,MAAM,CAACoB,UAAU,CAAC;EAC7CF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,YAAY,CAAC;EAC1CJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,YAAY,CAACC,MAAM,EAAE,CAAC;;EAE1D;EACA,IAAI,CAACD,YAAY,CAACC,MAAM,EAAE,EAAE;IAC3B,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGR,QAAQ;IACvC,MAAMS,SAAS,GAAG,IAAIC,IAAI,EAAE;IAC5B,MAAMC,SAAS,GAAG,IAAID,IAAI,EAAE;;IAE5B;IACA,IAAI;MACH,MAAM1B,MAAM,CAACmB,UAAU,EAAE;QAAEI,WAAW;QAAEC,KAAK;QAAEG,SAAS;QAAEF;MAAU,CAAC,CAAC;IACvE,CAAC,CAAC,OAAOG,KAAK,EAAE;MACfX,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEU,KAAK,CAACC,OAAO,CAAC;IACvD;EACD;EAEA,OAAOV,UAAU;AAClB,CAAC"},"metadata":{},"sourceType":"module"}